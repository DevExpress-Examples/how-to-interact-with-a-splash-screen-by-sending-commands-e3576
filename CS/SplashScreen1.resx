<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>